; Dedicated to my dad, who taught me Logo when I was a kid, and taught me the love of programming and math.
;
; http://imgur.com/1XkK2rO
;
; The Fractional Fractal (DFS version)
; Author: Ron Gross <chiefninjaofficer@gmail.com>
;------------------------------------------------
;
; https://github.com/ripper234/art/blob/master/Fractional_DFS.logo
; Quickrun: http://www.calormen.com/jslogo/#
; 
; The Fraction Fractal is a new fractal that is built upon the Natrual Fractals (1/2, 1/3, 1/4, ...)
; This is the DFS version as we do a "depth-first search" instead of expanding on all branches.

; Clear screen & consts
cs
ct
make "debug TRUE

make "minwidth 4  ; start with 1/4
ifelse thing "debug [
	make "size 150
	make "maxdepth 5
	make "maxwidth 20       ; if this is 4 we'll do 1/2, 1/3, 1/4
] [
	make "size 300
	make "maxdepth 10
	make "maxwidth 40       ; if this is 4 we'll do 1/2, 1/3, 1/4
]
; Define logging
to log :text
	if thing "debug [ print :text]
end
to logpos :text
	if thing "debug [ print pos]
	if thing "debug [ print :text]
end
invoke "logpos ["Logging setup successfully]

; We do DFS, so the main loop is depth
for [depth 1 thing "maxdepth] [
	invoke "log word "depth_ :depth
	; Setup
	fd thing "size
	bk thing "size
		
	; Width loop, we iterate over 1/2, 1/3, 1/4...
	for [width thing "minwidth thing "maxwidth] [
		invoke "logpos word "width_ :width
		
		; Find the angle
		localmake "angle 360 / thing "width
		invoke "log :angle
		right thing "angle
		
		; There and back
		fd thing "size
		bk thing "size
		
		; Undo angle
		left thing "angle
	]
	
	; Prepare for next iteration
	make "size :size / 2
	invoke "logpos word "new_size :size
	right 180
	fd :size
]

hideturtle
